#ifndef @CL_HPP_INCLUDE_GUARD_MACRO@
#define @CL_HPP_INCLUDE_GUARD_MACRO@

#ifdef __MSYS__
#  include <alloca.h>
#endif  // __MSYS__


#ifndef CL_SILENCE_DEPRECATION
#  cmakedefine CL_SILENCE_DEPRECATION
#endif  // CL_SILENCE_DEPRECATION
#ifndef __CL_ENABLE_EXCEPTIONS
#  cmakedefine __CL_ENABLE_EXCEPTIONS
#endif  // __CL_ENABLE_EXCEPTIONS

#ifndef CL_USE_DEPRECATED_OPENCL_1_0_APIS
#  cmakedefine CL_USE_DEPRECATED_OPENCL_1_0_APIS
#endif  // CL_USE_DEPRECATED_OPENCL_1_0_APIS
#ifndef CL_USE_DEPRECATED_OPENCL_1_1_APIS
#  cmakedefine CL_USE_DEPRECATED_OPENCL_1_1_APIS
#endif  // CL_USE_DEPRECATED_OPENCL_1_1_APIS
#ifndef CL_USE_DEPRECATED_OPENCL_1_2_APIS
#  cmakedefine CL_USE_DEPRECATED_OPENCL_1_2_APIS
#endif  // CL_USE_DEPRECATED_OPENCL_1_2_APIS
#ifndef CL_USE_DEPRECATED_OPENCL_2_0_APIS
#  cmakedefine CL_USE_DEPRECATED_OPENCL_2_0_APIS
#endif  // CL_USE_DEPRECATED_OPENCL_2_0_APIS
#ifndef CL_USE_DEPRECATED_OPENCL_2_1_APIS
#  cmakedefine CL_USE_DEPRECATED_OPENCL_2_1_APIS
#endif  // CL_USE_DEPRECATED_OPENCL_2_1_APIS
#ifndef CL_USE_DEPRECATED_OPENCL_2_2_APIS
#  cmakedefine CL_USE_DEPRECATED_OPENCL_2_2_APIS
#endif  // CL_USE_DEPRECATED_OPENCL_2_2_APIS


#if (defined(__GNUC__) && (__GNUC__ > 4 || __GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#  define @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA
#endif
#ifdef @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA
#  pragma GCC diagnostic push
#  pragma GCC diagnostic ignored "-Weffc++"
#  pragma GCC diagnostic ignored "-Wcast-qual"
#  pragma GCC diagnostic ignored "-Wconversion"
#  pragma GCC diagnostic ignored "-Wold-style-cast"
#  pragma GCC diagnostic ignored "-Wuseless-cast"
#  if __GNUC__ > 4 || __GNUC__ == 4 && __GNUC_MINOR__ >= 7
#    pragma GCC diagnostic ignored "-Wzero-as-null-pointer-constant"
#  endif
#  if __GNUC__ > 5 || __GNUC__ == 5 && __GNUC_MINOR__ >= 1
#    pragma GCC diagnostic ignored "-Wsuggest-final-methods"
#    pragma GCC diagnostic ignored "-Wsuggest-override"
#    pragma GCC diagnostic ignored "-Wsuggest-final-types"
#  endif
#endif  // @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA


#include <CL/cl.hpp>


#ifdef @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA
#  pragma GCC diagnostic pop
#endif  // @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA
#ifdef @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA
#  undef @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA
#endif  // @CL_HPP_INCLUDE_GUARD_MACRO@_AVAILABLE_GCC_DIAGNOSTIC_PRAGMA


#endif  // @CL_HPP_INCLUDE_GUARD_MACRO@
